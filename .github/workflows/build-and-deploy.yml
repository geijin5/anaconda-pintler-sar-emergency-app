name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  JAVA_VERSION: '17'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Run linter
      run: bun run lint
      continue-on-error: true
      
    - name: Type check
      run: bunx tsc --noEmit
      continue-on-error: true

  build-android:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: bun install
      
    - name: Setup Expo CLI
      run: bun add -g @expo/cli
      
    - name: Prebuild Android
      run: bunx expo prebuild --platform android --clean
      
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Build APK
      run: |
        cd android
        ./gradlew assembleRelease --no-daemon --stacktrace
        
    - name: Build AAB (for Play Store)
      run: |
        cd android
        ./gradlew bundleRelease --no-daemon --stacktrace
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ github.sha }}
        path: android/app/build/outputs/apk/release/app-release.apk
        retention-days: 30
        
    - name: Upload AAB
      uses: actions/upload-artifact@v4
      with:
        name: android-aab-${{ github.sha }}
        path: android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 30

  build-ios:
    needs: test
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Setup Expo CLI
      run: bun add -g @expo/cli
      
    - name: Prebuild iOS
      run: bunx expo prebuild --platform ios --clean
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Build iOS Archive
      run: |
        cd ios
        mkdir -p build
        xcodebuild -workspace *.xcworkspace \
          -scheme * \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath ./build/App.xcarchive \
          archive \
          CODE_SIGNING_ALLOWED=NO
        
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
          -archivePath ./build/App.xcarchive \
          -exportPath ./build \
          -exportOptionsPlist ../export-options.plist
      continue-on-error: true
        
    - name: Upload iOS Archive
      uses: actions/upload-artifact@v4
      with:
        name: ios-archive-${{ github.sha }}
        path: ios/build/App.xcarchive
        retention-days: 30
        
    - name: Upload IPA (if available)
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ios-ipa-${{ github.sha }}
        path: ios/build/*.ipa
        retention-days: 30

  build-web:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Setup Expo CLI
      run: bun add -g @expo/cli
      
    - name: Export Web
      run: bunx expo export --platform web
      
    - name: Upload Web Build
      uses: actions/upload-artifact@v4
      with:
        name: web-build-${{ github.sha }}
        path: dist/
        retention-days: 30
        
    - name: Deploy to GitHub Pages (on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: your-domain.com  # Optional: replace with your custom domain

  create-release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build-android, build-ios, build-web]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Automated release from commit ${{ github.sha }}
          
          ## Changes
          ${{ github.event.head_commit.message }}
          
          ## Downloads
          - **Android APK**: For direct installation on Android devices
          - **Android AAB**: For Google Play Store submission
          - **iOS Archive**: For development and testing
          - **Web Build**: Static files for web deployment
        files: |
          android-apk-${{ github.sha }}/app-release.apk
          android-aab-${{ github.sha }}/app-release.aab
          ios-archive-${{ github.sha }}/App.xcarchive
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}